<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_Icono.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="eli_Borde.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="sha_Sombra.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>110, 17</value>
  </metadata>
</root>